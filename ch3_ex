//1-1
SELECT bookname
FROM Book
WHERE bookid = 1;
//1-2
SELECT bookname
FROM Book
WHERE price >= 20000;
//1-3
SELECT SUM(saleprice) AS total_purchase
FROM Orders
WHERE custid = (
    SELECT custid FROM Customer WHERE name = '박지성'
);
//1-4
SELECT COUNT(*) AS book_count
FROM Orders
WHERE custid = (
    SELECT custid FROM Customer WHERE name = '박지성'
);
//1-5
SELECT COUNT(DISTINCT B.publisher) AS publisher_count
FROM Orders O
JOIN Book B ON O.bookid = B.bookid
WHERE O.custid = (
    SELECT custid FROM Customer WHERE name = '박지성'
);
//1-6
SELECT B.bookname, B.price AS original_price, O.saleprice,
       (B.price - O.saleprice) AS price_difference
FROM Orders O
JOIN Book B ON O.bookid = B.bookid
WHERE O.custid = (
    SELECT custid FROM Customer WHERE name = '박지성'
);
//1-7
SELECT bookname
FROM Book
WHERE bookid NOT IN (
    SELECT bookid
    FROM Orders
    WHERE custid = (
        SELECT custid FROM Customer WHERE name = '박지성'
    )
);
//2-1
SELECT COUNT(*) AS total_books
FROM Book;
//2-2
SELECT COUNT(DISTINCT publisher) AS publisher_count
FROM Book;
//2-3
SELECT name, address
FROM Customer;
//2-4
SELECT orderid
FROM Orders
WHERE orderdate BETWEEN '2024-07-04' AND '2024-07-07';
//2-5
SELECT orderid
FROM Orders
WHERE orderdate NOT BETWEEN '2024-07-04' AND '2024-07-07';
//2-6
SELECT name, address
FROM Customer
WHERE name LIKE '김%';
//2-7
SELECT name, address
FROM Customer
WHERE name LIKE '김%아';
//2-8
SELECT name
FROM Customer
WHERE custid NOT IN (
    SELECT DISTINCT custid
    FROM Orders
);
//2-9
SELECT SUM(saleprice) AS total_sales, AVG(saleprice) AS avg_sales
FROM Orders;
//2-10
SELECT C.name, SUM(O.saleprice) AS total_purchase
FROM Customer C
JOIN Orders O ON C.custid = O.custid
GROUP BY C.name;
//2-11
SELECT C.name, B.bookname
FROM Customer C
JOIN Orders O ON C.custid = O.custid
JOIN Book B ON O.bookid = B.bookid
ORDER BY C.name;
//2-12
SELECT O.orderid, B.bookname, (B.price - O.saleprice) AS price_difference
FROM Orders O
JOIN Book B ON O.bookid = B.bookid
ORDER BY price_difference DESC
LIMIT 1;
//2-13
WITH overall_avg AS (
    SELECT AVG(saleprice) AS avg_sale FROM Orders
)
SELECT C.name
FROM Customer C
JOIN Orders O ON C.custid = O.custid
GROUP BY C.name
HAVING AVG(O.saleprice) > (SELECT avg_sale FROM overall_avg);
//3-1
WITH Park_publishers AS (
    SELECT DISTINCT B.publisher
    FROM Orders O
    JOIN Book B ON O.bookid = B.bookid
    WHERE O.custid = (SELECT custid FROM Customer WHERE name = '박지성')
)
SELECT DISTINCT C.name
FROM Customer C
JOIN Orders O ON C.custid = O.custid
JOIN Book B ON O.bookid = B.bookid
WHERE B.publisher IN (SELECT publisher FROM Park_publishers);
//3-2
SELECT C.name
FROM Customer C
JOIN Orders O ON C.custid = O.custid
JOIN Book B ON O.bookid = B.bookid
GROUP BY C.name
HAVING COUNT(DISTINCT B.publisher) >= 2;
//3-3
WITH total_customers AS (
    SELECT COUNT(*) AS total FROM Customer
),
book_customers AS (
    SELECT B.bookid, B.bookname, COUNT(DISTINCT O.custid) AS customer_count
    FROM Book B
    JOIN Orders O ON B.bookid = O.bookid
    GROUP BY B.bookid, B.bookname
)
SELECT bookname
FROM book_customers, total_customers
WHERE customer_count >= total * 0.3;
//4-1
INSERT INTO Book (bookid, bookname, publisher, price)
VALUES (11, '스포츠 세계', '대한미디어', 10000);
//4-2
DELETE FROM Book
WHERE publisher = '삼성당';
//4-3
DELETE FROM Orders
WHERE bookid IN (
    SELECT bookid FROM Book WHERE publisher = '이상미디어'
);

DELETE FROM Book
WHERE publisher = '이상미디어';
--삭제가 안될경우 Order 테이블에서 Book테이블의 bookid를 참조한느 외래키가 제약되어서.
//4-4
UPDATE Book
SET publisher = '대한출판사'
WHERE publisher = '대한미디어';
//4-5
CREATE TABLE Bookcompany (
    name VARCHAR(20) PRIMARY KEY,
    address VARCHAR(20),
    begin DATE
);
//4-6
ALTER TABLE Bookcompany
ADD Webaddress VARCHAR(30);
//4-7
INSERT INTO Bookcompany (name, address, begin, Webaddress)
VALUES ('한빛아카데미', '서울시 마포구', '1993-01-01', 'http://hanbit.co.kr');
//5-1
-- custid/name/address/phone
-- 5/박세리/대한민국 대전/NULL
//5-2
-- custid/name/address/phone
-- 1/박지성/영국 멘체스타/000-5000-0001
-- 2/김연아/대한민국 서울/000-6000-0001
-- 3/김연경/대한민국 경기도/000-7000-0001
-- 4/추신수/미국 클리블랜드/000-8000-0001
//6
-- DDL : CREATE, ALTER, DROP
-- DML : SELECT, INSERT, UPDATE, DELETE
-- DCL : GRANT, REVOKE
//7-1
SELECT *
FROM R
WHERE A = 'a2';
//7-2
SELECT A, B
FROM R;
//7-3
SELECT *
FROM R
JOIN S
ON R.C = S.C;
//8-1
| A  | B  | C  | C  | D  | E  |
| -- | -- | -- | -- | -- | -- |
| a1 | b1 | c1 | c1 | d2 | e1 |
| a1 | b1 | c1 | c1 | d1 | e2 |
| a2 | b1 | c1 | c1 | d2 | e1 |
| a2 | b1 | c1 | c1 | d1 | e2 |
| a3 | b1 | c2 | c2 | d3 | e3 |
//8-2
| A  | B  | C  | C    | D    | E    |
| -- | -- | -- | ---- | ---- | ---- |
| a1 | b1 | c1 | c1   | d2   | e1   |
| a1 | b1 | c1 | c1   | d1   | e2   |
| a2 | b1 | c1 | c1   | d2   | e1   |
| a2 | b1 | c1 | c1   | d1   | e2   |
| a3 | b1 | c2 | c2   | d3   | e3   |
| a4 | b2 | c4 | NULL | NULL | NULL |
//8-3
| A    | B    | C    | C  | D  | E  |
| ---- | ---- | ---- | -- | -- | -- |
| a1   | b1   | c1   | c1 | d2 | e1 |
| a1   | b1   | c1   | c1 | d1 | e2 |
| a2   | b1   | c1   | c1 | d2 | e1 |
| a2   | b1   | c1   | c1 | d1 | e2 |
| a3   | b1   | c2   | c2 | d3 | e3 |
| NULL | NULL | NULL | c5 | d3 | e3 |
//8-4
| A    | B    | C    | C    | D    | E    |
| ---- | ---- | ---- | ---- | ---- | ---- |
| a1   | b1   | c1   | c1   | d2   | e1   |
| a1   | b1   | c1   | c1   | d1   | e2   |
| a2   | b1   | c1   | c1   | d2   | e1   |
| a2   | b1   | c1   | c1   | d1   | e2   |
| a3   | b1   | c2   | c2   | d3   | e3   |
| a4   | b2   | c4   | NULL | NULL | NULL |
| NULL | NULL | NULL | c5   | d3   | e3   |
//8-5
| A  | B  | R.C | S.C | D  | E  |
| -- | -- | --- | --- | -- | -- |
| a1 | b1 | c1  | c1  | d2 | e1 |
| a1 | b1 | c1  | c1  | d1 | e2 |
| a1 | b1 | c1  | c2  | d3 | e3 |
| a1 | b1 | c1  | c5  | d3 | e3 |
| a2 | b1 | c1  | c1  | d2 | e1 |
| a2 | b1 | c1  | c1  | d1 | e2 |
| a2 | b1 | c1  | c2  | d3 | e3 |
| a2 | b1 | c1  | c5  | d3 | e3 |
| a3 | b1 | c2  | c1  | d2 | e1 |
| a3 | b1 | c2  | c1  | d1 | e2 |
| a3 | b1 | c2  | c2  | d3 | e3 |
| a3 | b1 | c2  | c5  | d3 | e3 |
| a4 | b2 | c4  | c1  | d2 | e1 |
| a4 | b2 | c4  | c1  | d1 | e2 |
| a4 | b2 | c4  | c2  | d3 | e3 |
| a4 | b2 | c4  | c5  | d3 | e3 |
//9
SUM(col2)
----------
10
//10
-- 8개
//11
(2,2)
